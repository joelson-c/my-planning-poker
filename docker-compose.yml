services:
  db:
    image: postgres:17
    volumes:
      - ./.docker/postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "vote-app"]
      interval: 1s
      timeout: 5s
      retries: 10
    environment:
      - POSTGRES_USER=vote-app
      - POSTGRES_PASSWORD=vote-app
      - POSTGRES_DB=vote-app
    expose:
      - 5432
    ports:
      - 5432:5432
  backend:
    image: "node:lts"
    working_dir: /home/node/app/packages/vote-server
    user: "node"
    command: "npm run start:dev"
    volumes:
      - ./:/home/node/app
    expose:
      - 3000
    environment:
      - DATABASE_URL=postgresql://vote-app:vote-app@db:5432/vote-app?schema=public
      - CENTRIFUGO_API_KEY=${CENTRIFUGO_API_KEY:?error}
      - REALTIME_JWT_PRIVATE_KEY=${REALTIME_JWT_PRIVATE_KEY:?error}
      - REALTIME_JWT_PUBLIC_KEY=${REALTIME_JWT_PUBLIC_KEY:?error}
      - AUTH_JWT_PRIVATE_KEY=${AUTH_JWT_PRIVATE_KEY:?error}
      - AUTH_JWT_PUBLIC_KEY=${AUTH_JWT_PUBLIC_KEY:?error}
    depends_on:
      db:
        condition: service_healthy
  frontend:
    image: "node:lts"
    working_dir: /home/node/app/packages/vote-client
    user: "node"
    command: "npm run dev"
    volumes:
      - ./:/home/node/app
    expose:
      - 5173
  centrifugo:
    image: centrifugo/centrifugo:v5.2.0
    volumes:
      - ./centrifugo/config.json:/centrifugo/config.json
    command: centrifugo -c config.json
    environment:
      - CENTRIFUGO_TOKEN_RSA_PUBLIC_KEY=${REALTIME_JWT_PUBLIC_KEY:?error}
      - CENTRIFUGO_API_KEY${CENTRIFUGO_API_KEY:?error}
      - CENTRIFUGO_ALLOWED_ORIGINS=http://frontend:5173
    expose:
      - 8000
  nginx:
    image: nginx:mainline-alpine
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 9000:80
    depends_on:
      - backend
      - frontend
      - centrifugo
