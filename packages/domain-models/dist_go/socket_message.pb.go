// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: socket_message.proto

package dist_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	base "planningpoker/domain_models/dist_go/base"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SocketMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type base.MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=planningpoker.realtime.base.MessageType" json:"type,omitempty"`
	// Types that are assignable to Content:
	//
	//	*SocketMessage_Error
	//	*SocketMessage_CreateRoomRequest
	//	*SocketMessage_CreateRoomResponse
	//	*SocketMessage_JoinRoomRequest
	//	*SocketMessage_VoteRequest
	//	*SocketMessage_RoomStateBroadcast
	//	*SocketMessage_JoinRoomResponse
	//	*SocketMessage_VoteBroadcast
	Content isSocketMessage_Content `protobuf_oneof:"content"`
}

func (x *SocketMessage) Reset() {
	*x = SocketMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketMessage) ProtoMessage() {}

func (x *SocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_socket_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketMessage.ProtoReflect.Descriptor instead.
func (*SocketMessage) Descriptor() ([]byte, []int) {
	return file_socket_message_proto_rawDescGZIP(), []int{0}
}

func (x *SocketMessage) GetType() base.MessageType {
	if x != nil {
		return x.Type
	}
	return base.MessageType(0)
}

func (m *SocketMessage) GetContent() isSocketMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *SocketMessage) GetError() *Error {
	if x, ok := x.GetContent().(*SocketMessage_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SocketMessage) GetCreateRoomRequest() *CreateRoomRequest {
	if x, ok := x.GetContent().(*SocketMessage_CreateRoomRequest); ok {
		return x.CreateRoomRequest
	}
	return nil
}

func (x *SocketMessage) GetCreateRoomResponse() *CreateRoomResponse {
	if x, ok := x.GetContent().(*SocketMessage_CreateRoomResponse); ok {
		return x.CreateRoomResponse
	}
	return nil
}

func (x *SocketMessage) GetJoinRoomRequest() *JoinRoomRequest {
	if x, ok := x.GetContent().(*SocketMessage_JoinRoomRequest); ok {
		return x.JoinRoomRequest
	}
	return nil
}

func (x *SocketMessage) GetVoteRequest() *VoteRequest {
	if x, ok := x.GetContent().(*SocketMessage_VoteRequest); ok {
		return x.VoteRequest
	}
	return nil
}

func (x *SocketMessage) GetRoomStateBroadcast() *RoomStateBroadcast {
	if x, ok := x.GetContent().(*SocketMessage_RoomStateBroadcast); ok {
		return x.RoomStateBroadcast
	}
	return nil
}

func (x *SocketMessage) GetJoinRoomResponse() *JoinRoomResponse {
	if x, ok := x.GetContent().(*SocketMessage_JoinRoomResponse); ok {
		return x.JoinRoomResponse
	}
	return nil
}

func (x *SocketMessage) GetVoteBroadcast() *VoteBroadcast {
	if x, ok := x.GetContent().(*SocketMessage_VoteBroadcast); ok {
		return x.VoteBroadcast
	}
	return nil
}

type isSocketMessage_Content interface {
	isSocketMessage_Content()
}

type SocketMessage_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type SocketMessage_CreateRoomRequest struct {
	CreateRoomRequest *CreateRoomRequest `protobuf:"bytes,3,opt,name=createRoomRequest,proto3,oneof"`
}

type SocketMessage_CreateRoomResponse struct {
	CreateRoomResponse *CreateRoomResponse `protobuf:"bytes,4,opt,name=createRoomResponse,proto3,oneof"`
}

type SocketMessage_JoinRoomRequest struct {
	JoinRoomRequest *JoinRoomRequest `protobuf:"bytes,5,opt,name=joinRoomRequest,proto3,oneof"`
}

type SocketMessage_VoteRequest struct {
	VoteRequest *VoteRequest `protobuf:"bytes,6,opt,name=voteRequest,proto3,oneof"`
}

type SocketMessage_RoomStateBroadcast struct {
	RoomStateBroadcast *RoomStateBroadcast `protobuf:"bytes,7,opt,name=roomStateBroadcast,proto3,oneof"`
}

type SocketMessage_JoinRoomResponse struct {
	JoinRoomResponse *JoinRoomResponse `protobuf:"bytes,8,opt,name=joinRoomResponse,proto3,oneof"`
}

type SocketMessage_VoteBroadcast struct {
	VoteBroadcast *VoteBroadcast `protobuf:"bytes,9,opt,name=voteBroadcast,proto3,oneof"`
}

func (*SocketMessage_Error) isSocketMessage_Content() {}

func (*SocketMessage_CreateRoomRequest) isSocketMessage_Content() {}

func (*SocketMessage_CreateRoomResponse) isSocketMessage_Content() {}

func (*SocketMessage_JoinRoomRequest) isSocketMessage_Content() {}

func (*SocketMessage_VoteRequest) isSocketMessage_Content() {}

func (*SocketMessage_RoomStateBroadcast) isSocketMessage_Content() {}

func (*SocketMessage_JoinRoomResponse) isSocketMessage_Content() {}

func (*SocketMessage_VoteBroadcast) isSocketMessage_Content() {}

var File_socket_message_proto protoreflect.FileDescriptor

var file_socket_message_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x19,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x05, 0x0a, 0x0d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70,
	0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x59, 0x0a, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x76, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5c, 0x0a, 0x12, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x72, 0x6f,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x12, 0x56, 0x0a, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x65,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x25, 0x5a, 0x23, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6b, 0x65, 0x72, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x2d, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_socket_message_proto_rawDescOnce sync.Once
	file_socket_message_proto_rawDescData = file_socket_message_proto_rawDesc
)

func file_socket_message_proto_rawDescGZIP() []byte {
	file_socket_message_proto_rawDescOnce.Do(func() {
		file_socket_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_socket_message_proto_rawDescData)
	})
	return file_socket_message_proto_rawDescData
}

var file_socket_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_socket_message_proto_goTypes = []any{
	(*SocketMessage)(nil),      // 0: planningpoker.realtime.SocketMessage
	(base.MessageType)(0),      // 1: planningpoker.realtime.base.MessageType
	(*Error)(nil),              // 2: planningpoker.realtime.Error
	(*CreateRoomRequest)(nil),  // 3: planningpoker.realtime.CreateRoomRequest
	(*CreateRoomResponse)(nil), // 4: planningpoker.realtime.CreateRoomResponse
	(*JoinRoomRequest)(nil),    // 5: planningpoker.realtime.JoinRoomRequest
	(*VoteRequest)(nil),        // 6: planningpoker.realtime.VoteRequest
	(*RoomStateBroadcast)(nil), // 7: planningpoker.realtime.RoomStateBroadcast
	(*JoinRoomResponse)(nil),   // 8: planningpoker.realtime.JoinRoomResponse
	(*VoteBroadcast)(nil),      // 9: planningpoker.realtime.VoteBroadcast
}
var file_socket_message_proto_depIdxs = []int32{
	1, // 0: planningpoker.realtime.SocketMessage.type:type_name -> planningpoker.realtime.base.MessageType
	2, // 1: planningpoker.realtime.SocketMessage.error:type_name -> planningpoker.realtime.Error
	3, // 2: planningpoker.realtime.SocketMessage.createRoomRequest:type_name -> planningpoker.realtime.CreateRoomRequest
	4, // 3: planningpoker.realtime.SocketMessage.createRoomResponse:type_name -> planningpoker.realtime.CreateRoomResponse
	5, // 4: planningpoker.realtime.SocketMessage.joinRoomRequest:type_name -> planningpoker.realtime.JoinRoomRequest
	6, // 5: planningpoker.realtime.SocketMessage.voteRequest:type_name -> planningpoker.realtime.VoteRequest
	7, // 6: planningpoker.realtime.SocketMessage.roomStateBroadcast:type_name -> planningpoker.realtime.RoomStateBroadcast
	8, // 7: planningpoker.realtime.SocketMessage.joinRoomResponse:type_name -> planningpoker.realtime.JoinRoomResponse
	9, // 8: planningpoker.realtime.SocketMessage.voteBroadcast:type_name -> planningpoker.realtime.VoteBroadcast
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_socket_message_proto_init() }
func file_socket_message_proto_init() {
	if File_socket_message_proto != nil {
		return
	}
	file_create_room_request_proto_init()
	file_create_room_response_proto_init()
	file_join_room_request_proto_init()
	file_vote_request_proto_init()
	file_room_state_broadcast_proto_init()
	file_error_proto_init()
	file_join_room_response_proto_init()
	file_vote_broadcast_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_socket_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SocketMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_socket_message_proto_msgTypes[0].OneofWrappers = []any{
		(*SocketMessage_Error)(nil),
		(*SocketMessage_CreateRoomRequest)(nil),
		(*SocketMessage_CreateRoomResponse)(nil),
		(*SocketMessage_JoinRoomRequest)(nil),
		(*SocketMessage_VoteRequest)(nil),
		(*SocketMessage_RoomStateBroadcast)(nil),
		(*SocketMessage_JoinRoomResponse)(nil),
		(*SocketMessage_VoteBroadcast)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_socket_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_socket_message_proto_goTypes,
		DependencyIndexes: file_socket_message_proto_depIdxs,
		MessageInfos:      file_socket_message_proto_msgTypes,
	}.Build()
	File_socket_message_proto = out.File
	file_socket_message_proto_rawDesc = nil
	file_socket_message_proto_goTypes = nil
	file_socket_message_proto_depIdxs = nil
}
