// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: session/token.proto

package session

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Token struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Value       *string                `protobuf:"bytes,1,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_session_token_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_session_token_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Token) GetValue() string {
	if x != nil {
		if x.xxx_hidden_Value != nil {
			return *x.xxx_hidden_Value
		}
		return ""
	}
	return ""
}

func (x *Token) SetValue(v string) {
	x.xxx_hidden_Value = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Token) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Token) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Value = nil
}

type Token_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Value *string
}

func (b0 Token_builder) Build() *Token {
	m0 := &Token{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Value = b.Value
	}
	return m0
}

var File_session_token_proto protoreflect.FileDescriptor

const file_session_token_proto_rawDesc = "" +
	"\n" +
	"\x13session/token.proto\x12\asession\"\x1d\n" +
	"\x05Token\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05valueB'Z%github.com/joelson-c/votecoms/sessionb\beditionsp\xe8\a"

var file_session_token_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_session_token_proto_goTypes = []any{
	(*Token)(nil), // 0: session.Token
}
var file_session_token_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_session_token_proto_init() }
func file_session_token_proto_init() {
	if File_session_token_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_session_token_proto_rawDesc), len(file_session_token_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_session_token_proto_goTypes,
		DependencyIndexes: file_session_token_proto_depIdxs,
		MessageInfos:      file_session_token_proto_msgTypes,
	}.Build()
	File_session_token_proto = out.File
	file_session_token_proto_goTypes = nil
	file_session_token_proto_depIdxs = nil
}
