// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: session/session.proto

package session

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Session struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Nickname    *string                `protobuf:"bytes,1,opt,name=nickname"`
	xxx_hidden_Observer    bool                   `protobuf:"varint,2,opt,name=observer"`
	xxx_hidden_RoomId      *string                `protobuf:"bytes,3,opt,name=room_id,json=roomId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_session_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_session_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Session) GetNickname() string {
	if x != nil {
		if x.xxx_hidden_Nickname != nil {
			return *x.xxx_hidden_Nickname
		}
		return ""
	}
	return ""
}

func (x *Session) GetObserver() bool {
	if x != nil {
		return x.xxx_hidden_Observer
	}
	return false
}

func (x *Session) GetRoomId() string {
	if x != nil {
		if x.xxx_hidden_RoomId != nil {
			return *x.xxx_hidden_RoomId
		}
		return ""
	}
	return ""
}

func (x *Session) SetNickname(v string) {
	x.xxx_hidden_Nickname = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Session) SetObserver(v bool) {
	x.xxx_hidden_Observer = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Session) SetRoomId(v string) {
	x.xxx_hidden_RoomId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Session) HasNickname() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Session) HasObserver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Session) HasRoomId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Session) ClearNickname() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Nickname = nil
}

func (x *Session) ClearObserver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Observer = false
}

func (x *Session) ClearRoomId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RoomId = nil
}

type Session_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Nickname *string
	Observer *bool
	RoomId   *string
}

func (b0 Session_builder) Build() *Session {
	m0 := &Session{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Nickname != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Nickname = b.Nickname
	}
	if b.Observer != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Observer = *b.Observer
	}
	if b.RoomId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_RoomId = b.RoomId
	}
	return m0
}

var File_session_session_proto protoreflect.FileDescriptor

const file_session_session_proto_rawDesc = "" +
	"\n" +
	"\x15session/session.proto\x12\asession\"Z\n" +
	"\aSession\x12\x1a\n" +
	"\bnickname\x18\x01 \x01(\tR\bnickname\x12\x1a\n" +
	"\bobserver\x18\x02 \x01(\bR\bobserver\x12\x17\n" +
	"\aroom_id\x18\x03 \x01(\tR\x06roomIdB'Z%github.com/joelson-c/votecoms/sessionb\beditionsp\xe8\a"

var file_session_session_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_session_session_proto_goTypes = []any{
	(*Session)(nil), // 0: session.Session
}
var file_session_session_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_session_session_proto_init() }
func file_session_session_proto_init() {
	if File_session_session_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_session_session_proto_rawDesc), len(file_session_session_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_session_session_proto_goTypes,
		DependencyIndexes: file_session_session_proto_depIdxs,
		MessageInfos:      file_session_session_proto_msgTypes,
	}.Build()
	File_session_session_proto = out.File
	file_session_session_proto_goTypes = nil
	file_session_session_proto_depIdxs = nil
}
