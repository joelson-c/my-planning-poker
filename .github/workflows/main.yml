name: Create and publish Docker images

on:
    push:
        branches: ['main']

env:
    REGISTRY: ghcr.io

jobs:
    build-and-push-image:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                include:
                    - dockerfile: ./.docker/Dockerfile.frontend
                      image: ${{ github.actor }}/planning-poker-frontend
                      context: .
                    - dockerfile: ./.docker/Dockerfile.realtime
                      image: ${{ github.actor }}/planning-poker-realtime
                      context: ./packages/vote-realtime
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ matrix.image }}
                  tags: |
                      type=raw,value=latest,enable={{is_default_branch}}
                      type=sha,enable=false

            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v6
              with:
                  context: ${{ matrix.context }}
                  file: ${{ matrix.dockerfile }}
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  secrets: |
                      "session-secret=${{ secrets.SESSION_SECRET }}"

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ matrix.image }}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
