# syntax=docker/dockerfile:1

FROM golang:1.23 AS build

WORKDIR /usr/src/app
COPY go.mod go.sum ./

RUN --mount=type=cache,target=/go/pkg/mod/ \
    go mod download && \
    go mod verify && \
    go install github.com/go-delve/delve/cmd/dlv@latest

COPY . .

ENV GOCACHE=/root/.cache/go-build
RUN --mount=type=cache,target="/root/.cache/go-build" \
    --mount=type=cache,target=/go/pkg/mod/ \
    CGO_ENABLED=0 GOOS=linux go build -gcflags "all=-N -l" -o /usr/local/bin/realtime

FROM debian:12 AS release
WORKDIR /usr/src/app
COPY --from=build /usr/local/bin/realtime /usr/src/app/realtime
COPY --from=build /go/bin/dlv /usr/local/bin/dlv
RUN /usr/src/app/realtime superuser upsert dev@myplanningpoker.dev dev12345

VOLUME /usr/src/app/pb_data
EXPOSE 8090 4000
ENTRYPOINT [ "dlv", "--listen=:4000", "--headless=true", "--accept-multiclient", "exec", "realtime", "--continue", "--", "serve", "--http=0.0.0.0:8090", "--dev" ]
